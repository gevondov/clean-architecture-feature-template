<?xml version="1.0"?>
<template
    format="4"
    revision="1"
    name="Clean Architecture Feature"
    description="Creates a clean architecture feature">

        <parameter
            id="featureName"
            name="Feature Name"
            type="string"
            constraints="class|nonempty|unique"
            default="Sample" />

        <!-- Data layer -->

        <parameter
            id="needDataLayer"
            name="Need Data Layer"
            type="boolean"
            default="true" />

        <parameter
            id="repositoryName"
            name="Repository Interface Name"
            type="string"
            constraints="class|nonempty|unique"
            suggest="${underscoreToCamelCase(featureName)}Repository"
            visibility="needDataLayer" />

        <parameter
            id="repositoryImplName"
            name="Repository Implementation Class Name"
            type="string"
            constraints="class|nonempty|unique"
            suggest="${underscoreToCamelCase(featureName)}RepositoryImpl"
            visibility="needDataLayer" />

        <!-- Domain layer -->

        <parameter
            id="needDomainLayer"
            name="Need Domain Layer"
            type="boolean"
            default="true" />

        <parameter
            id="interactorName"
            name="Interactor Interface Name"
            type="string"
            constraints="class|nonempty|unique"
            suggest="${underscoreToCamelCase(featureName)}Interactor"
            visibility="needDomainLayer" />

        <parameter
            id="interactorImplName"
            name="Interactor Implementation Class Name"
            type="string"
            constraints="class|nonempty|unique"
            suggest="${underscoreToCamelCase(featureName)}InteractorImpl"
            visibility="needDomainLayer" />

        <!-- Presentation layer -->

        <parameter
            id="presentationLayerType"
            name="Presentation Layer"
            type="enum"
            default="none" >

            <option id="none">None</option>
            <option id="mvp">MVP</option>

        </parameter>

        <!-- MVP -->

        <parameter
            id="presenterName"
            name="Presenter Interface Name"
            type="string"
            constraints="class|nonempty|unique"
            suggest="${underscoreToCamelCase(featureName)}Presenter"
            visibility="presentationLayerType == 'mvp'" />

        <parameter
            id="presenterImplName"
            name="Presenter Implementation Class Name"
            type="string"
            constraints="class|nonempty|unique"
            suggest="${underscoreToCamelCase(featureName)}PresenterImpl"
            visibility="presentationLayerType == 'mvp'" />

        <parameter
            id="viewName"
            name="View Name"
            type="string"
            constraints="class|nonempty|unique"
            suggest="${underscoreToCamelCase(featureName)}View"
            visibility="presentationLayerType == 'mvp'" />

        <parameter
            id="viewWrapperName"
            name="View Wrapper Name"
            type="string"
            constraints="class|nonempty|unique"
            suggest="${underscoreToCamelCase(featureName)}ViewWrapper"
            visibility="presentationLayerType == 'mvp'" />

        <globals file="globals.xml.ftl" />
        <execute file="recipe.xml.ftl" />

</template>
